--[[
	コントラスト比自動計算.obj / ver.1.0.1
	Copyright (c) 2022 CaffemochaY

	ダイアログで2色を指定して、その2つのコントラスト比を自動で計算するスクリプト
	[WCAG 2.0](https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-procedure)基準で色のコントラスト比を計算する

	- parameter
		- 文字色 / 背景色 : 色
		- 文字サイズ, フォント名, 文字装飾 : テキストのパラメータ
		- 背景margin : 文字の範囲から、どれだけ余白をとるかの指定
		- debug_print : debug_printに値を返すかの指定

	- changelog
		- ver.1.0.1
			- バージョン表記を3桁に変更
]]

--track0:文字サイズ,1,512,50,1
--track1:文字装飾,0,4,0,1
--track2:margin,0,1000,20
--check0:debug_print,0
--dialog:文字色/col,local dp1=0x000000;背景色/col,local dp2=0xffffff;フォント名,local dp3="MS UI Gothic";

local crc_ct_col1, crc_ct_col2 = dp1 or 0x000000, dp2 or 0xffffff
local text_size, font_name, text_deco = math.floor(obj.track0), dp3 or "MS UI Gothic", math.floor(obj.track1)
local bg_margin = obj.track2

-- コントラスト比自動計算
package.path = package.path:gsub("(.-)(%?.-);.+", "%0;%1script\\%2")
local contrast = require("contrast_ratio_cal").contrast_ratio_cal(crc_ct_col1, crc_ct_col2)

-- 文字描画後のサイズを取得
obj.setfont(font_name, text_size, text_deco, crc_ct_col1)
obj.load("text", contrast.ratio)
obj.draw()
local w, h = obj.getpixel()

obj.copybuffer("tmp", "obj") -- tempbufferに文字を移動

-- 背景描画
obj.load("figure", "四角形", crc_ct_col2, 1)
obj.drawpoly(-w / 2 - bg_margin, -h / 2 - bg_margin, 0, w / 2 + bg_margin, -h / 2 - bg_margin, 0, w / 2 + bg_margin, h / 2 + bg_margin, 0, -w / 2 - bg_margin, h / 2 + bg_margin, 0)

-- 文字を描画
obj.copybuffer("obj", "tmp")
obj.draw()

--debug_print
if (obj.check0) then
	debug_print("col1           : 0x" .. string.format("%06x", crc_ct_col1))
	debug_print("col2           : 0x" .. string.format("%06x", crc_ct_col2))
	debug_print("col1_luminance : " .. contrast[1].l)
	debug_print("col2_luminance : " .. contrast[2].l)
	debug_print("contrast_ratio : " .. contrast.ratio)
end
