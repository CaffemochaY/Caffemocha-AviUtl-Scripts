--[[
	ソフトフォーカス.anm / ver.2.0.1
	Copyright (c) 2022 CaffemochaY

	- 立ち絵等の画像を柔らかい雰囲気にします
	- ついでに立体っぽさを演出出来るかもしれません
	- 影の雰囲気や線の固さが主に変化します

	"ぼかし", "拡散光", "単色化", "色調補正" の順番でエフェクトをかけます

	- parameter
		- alpha : エフェクトをかけたものの透明度(適応する強さに相当)
		- その他 : "ぼかし", "拡散光", "単色化", "色調補正" のパラメータ各種

	- 注意
		- `X,Y調整` は、絶対値が `"最大画像サイズ" - w(or h) - (blur_range + diffusion) * 2`より小さくなるようにしないと元画像がクリッピングされます
		- `合成モード(0-12)` のうち、`10`,`11`,`12`はうまくいかない場合があります
			- 詳細は `lua.txt` を見て下さい

	- changelog
		- ver.2
			- obj.copybufferを使わないようにした
			- 画像データのキャッシュ数を `0` にしても機能するようにした
			- 各種パラメータが `0` の時、パラメータが `0` の一部のエフェクトを無効化し、動作を軽量化した
		- ver.2.0.1
			- バージョン表記を3桁に変更
]]

--track0:alpha,0,100,40
--track1:ぼかし範囲,0,300,10,1
--track2:拡散光強さ,0,100,50
--track3:拡散,0,100,6,1
--dialog:X調整,local dp1=0;Y調整,local dp2=0;ぼかし縦横比,local dp3=0;ぼかし光の強さ,local dp4=0;ぼかしサイズ固定/chk,local dp5=0;拡散光サイズ固定/chk,local dp6=0;単色化強さ,local dp7=0;輝度保持/chk,local dp8=1;単色化_色/col,local dp9=0xffffff;明るさ,local dp10=100;コントラスト,local dp11=100;色相,local dp12=0;輝度,local dp13=100;彩度,local dp14=100;飽和する/chk,local dp15=0;合成モード(0-12),local dp16=0;

local alpha = obj.track0 / 100

if alpha ~= 0 then
	local blur_range = obj.track1
	local difl_str, diffusion = obj.track2, obj.track3

	local X_tuning, Y_tuning = dp1 or 0, dp2 or 0
	local blur_aspect, blur_light = dp3 or 0, dp4 or 0
	local sincolaf, sincolcol = dp7 or 0, dp9 or 0xffffff
	local s_brightness, s_contrast, s_hue, s_luminance, s_chroma = dp10 or 100, dp11 or 100, dp12 or 0, dp13 or 100, dp14 or 100
	local blmode = dp16 or 0

	-- [sourse](https://scrapbox.io/ePi5131/ソフトフォーカス_これで直る？)
	local cache = {}
	local function copybuffer(dst, src)
		if src == "obj" then
			cache[dst] = {obj.getpixeldata("alloc")}
		else
			local function resize(tw, th)
				local cw, ch = obj.getpixel()
				if tw < cw then
					obj.effect("クリッピング", "右", cw - tw)
				else
					obj.effect("領域拡張", "右", tw - cw)
				end
				if th < ch then
					obj.effect("クリッピング", "下", ch - th)
				else
					obj.effect("領域拡張", "下", th - ch)
				end
			end
			local c = cache[src]
			resize(c[2], c[3])
			obj.putpixeldata(c[1])
		end
	end

	local w, h = obj.getpixel()
	local bd_range = (diffusion + blur_range) * 2
	local X_t, Y_t = X_tuning * 0.5, Y_tuning * 0.5
	local bdw, bdh = bd_range + w + math.abs(X_tuning), bd_range + h + math.abs(Y_tuning)

	obj.setoption("drawtarget", "tempbuffer", bdw, bdh)
	copybuffer("cache:ori", "obj")

	-- ソフトフォーカス加工
	if blur_range ~= 0 then obj.effect("ぼかし", "範囲", blur_range, "縦横比", blur_aspect, "光の強さ", blur_light, "サイズ固定", dp5) end
	if difl_str ~= 0 then obj.effect("拡散光", "強さ", difl_str, "拡散", diffusion, "サイズ固定", dp6) end
	if sincolaf ~= 0 then obj.effect("単色化", "強さ", sincolaf, "輝度を保持する", dp8, "color", sincolcol) end
	obj.effect("色調補正", "明るさ", s_brightness, "ｺﾝﾄﾗｽﾄ", s_contrast, "色相", s_hue, "輝度", s_luminance, "彩度", s_chroma, "飽和する", dp15)
	copybuffer("cache:ebd", "obj")

	copybuffer("obj", "cache:ori")
	obj.draw(-X_t, -Y_t)

	copybuffer("obj", "cache:ebd")
	obj.setoption("blend", blmode)
	obj.draw(X_t, Y_t, 0, 1, alpha)

	obj.setoption("blend", 0)
	obj.copybuffer("obj", "tmp")

	obj.cx, obj.cy = obj.cx - X_t, obj.cy - Y_t
end
